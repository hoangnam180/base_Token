{
    "sourceFile": "src/controller/adminController.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1658590926542,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1658639746461,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -192,10 +192,9 @@\n         if (req.file != null || req.file != undefined) {\r\n             req.body.avatar = req.file.path.split('\\\\').slice(2).join('/');\r\n         }\r\n         const { ten_sp, gia_sp, trang_thai, ma_dm, khuyen_mai, description, avatar, ban_chay } = req.body;\r\n-        let newprice = new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(gia_sp);\r\n-        const sql = `INSERT INTO sanpham (ban_chay,id_sp,id_dm, ten_sp, anh_sp,gia_sp, khuyen_mai, trang_thai,chi_tiet_sp) VALUES (${ban_chay ? ban_chay : 0},NULL, ${ma_dm}, '${ten_sp}', '${avatar ? avatar : \"NULL\"}', '${newprice}', '${khuyen_mai}', '${trang_thai}', '${description}')`;\r\n+        const sql = `INSERT INTO sanpham (ban_chay,id_sp,id_dm, ten_sp, anh_sp,gia_sp, khuyen_mai, trang_thai,chi_tiet_sp) VALUES (${ban_chay ? ban_chay : 0},NULL, ${ma_dm}, '${ten_sp}', '${avatar ? avatar : \"NULL\"}', '${gia_sp}', '${khuyen_mai}', '${trang_thai}', '${description}')`;\r\n         await pool.execute(sql);\r\n         console.log(sql);\r\n         return res.redirect('/admin/products');\r\n     }\r\n"
                },
                {
                    "date": 1658639768185,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -175,10 +175,9 @@\n         const sqlimg = `SELECT anh_sp FROM sanpham WHERE id_sp = ${id}`;\r\n         const [rowsimg] = await pool.execute(sqlimg);\r\n         const { anh_sp } = rowsimg[0];\r\n         let { ten_sp, gia_sp, trang_thai, id_dm, khuyen_mai, description } = req.body;\r\n-        let newprice = new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(gia_sp);\r\n-        const sql = `UPDATE sanpham SET ten_sp = '${ten_sp}', gia_sp = '${newprice}', trang_thai = '${trang_thai}', id_dm = '${id_dm}', khuyen_mai = '${khuyen_mai}', chi_tiet_sp = '${description}', anh_sp = '${anh_sp ? anh_sp : \"\"}' WHERE id_sp = ${id}`;\r\n+        const sql = `UPDATE sanpham SET ten_sp = '${ten_sp}', gia_sp = '${gia_sp}', trang_thai = '${trang_thai}', id_dm = '${id_dm}', khuyen_mai = '${khuyen_mai}', chi_tiet_sp = '${description}', anh_sp = '${anh_sp ? anh_sp : \"\"}' WHERE id_sp = ${id}`;\r\n         await pool.execute(sql);\r\n         return res.redirect('/admin/products');\r\n     }\r\n     // GET create product page\r\n"
                },
                {
                    "date": 1658639777571,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -193,9 +193,8 @@\n         }\r\n         const { ten_sp, gia_sp, trang_thai, ma_dm, khuyen_mai, description, avatar, ban_chay } = req.body;\r\n         const sql = `INSERT INTO sanpham (ban_chay,id_sp,id_dm, ten_sp, anh_sp,gia_sp, khuyen_mai, trang_thai,chi_tiet_sp) VALUES (${ban_chay ? ban_chay : 0},NULL, ${ma_dm}, '${ten_sp}', '${avatar ? avatar : \"NULL\"}', '${gia_sp}', '${khuyen_mai}', '${trang_thai}', '${description}')`;\r\n         await pool.execute(sql);\r\n-        console.log(sql);\r\n         return res.redirect('/admin/products');\r\n     }\r\n \r\n     // GET comments page\r\n"
                }
            ],
            "date": 1658590926542,
            "name": "Commit-0",
            "content": "import md5 from 'md5';\r\nimport pool from '../config/connectDatabase'\r\n//[GET]\r\nclass AdminController {\r\n    //[GET] Page login\r\n    login = (req, res) => {\r\n        if (req.signedCookies.email) {\r\n            res.redirect('/admin/home');\r\n            return;\r\n        }\r\n        return res.render('admin/login.ejs', { err: '' })\r\n    }\r\n\r\n    //GET home page login\r\n    getHomepage = (req, res) => {\r\n        if (req.signedCookies.email) {\r\n            return res.render('admin/home.ejs', { data: req.data[0], url: req.url })\r\n        }\r\n    }\r\n    //GET checklogin page\r\n    checkuser = async (req, res) => {\r\n        const { user_name, password } = req.body;\r\n        const hashPassword = md5(Number(password));\r\n        if (!user_name || !password) { return }\r\n        const sql = `SELECT * FROM thanhvien WHERE email = '${user_name}' AND mat_khau = '${hashPassword}'`;\r\n        const [rows] = await pool.execute(sql);\r\n        if (rows.length > 0 && rows[0].quyen_truy_cap === 2) {\r\n            res.cookie('email', rows[0].email, {\r\n                signed: true,\r\n            });\r\n            res.render('admin/home.ejs', { data: rows[0], url: req.url })\r\n            return;\r\n        }\r\n        else {\r\n            res.render('admin/login.ejs', { err: 'Sai tài khoản hoặc mật khẩu' })\r\n            return;\r\n        }\r\n    }\r\n    //GET User by id\r\n    editUser = async (req, res) => {\r\n        const { id } = req.params;\r\n        const sql = `SELECT * FROM thanhvien WHERE id_thanhvien = ${id}`;\r\n        const [rows] = await pool.execute(sql);\r\n        res.render('admin/editUser.ejs', { data: rows[0], url: req.url })\r\n        // return;\r\n    }\r\n\r\n    //GET User update\r\n    updateUser = async (req, res) => {\r\n        const { id } = req.params;\r\n        const { sdt, cmnd, address, name, email } = req.body;\r\n        const sql = `UPDATE thanhvien SET sdt = '${sdt}', cmnd = '${cmnd}', address = '${address}', name = '${name}', email = '${email}' WHERE id_thanhvien = ${id}`;\r\n        await pool.execute(sql);\r\n        res.redirect('/admin/home');\r\n    }\r\n    // LOGOUT\r\n    logout = (req, res) => {\r\n        res.clearCookie('email');\r\n        return res.redirect('/admin');\r\n    }\r\n\r\n    //GET account page\r\n    account = async (req, res) => {\r\n        const sql = `SELECT * FROM thanhvien`;\r\n        const [rows] = await pool.execute(sql);\r\n        return res.render('admin/account.ejs', { data: rows, url: req.url })\r\n    }\r\n    //GET create account page\r\n    getCreateAccount = async (req, res) => {\r\n        return res.render('admin/createAccount.ejs', { url: req.url })\r\n    }\r\n    //POST create account page\r\n    createAccount = async (req, res) => {\r\n        const { sdt, cmnd, address, name, email, password } = req.body;\r\n        const hashPassword = md5(Number(password));\r\n        const sql = `INSERT INTO thanhvien (sdt, cmnd, address, name, email, mat_khau) VALUES ('${sdt}', '${cmnd}', '${address}', '${name}', '${email}', '${hashPassword}')`;\r\n        await pool.execute(sql);\r\n        res.redirect('/admin/account');\r\n    }\r\n    // delete account page\r\n    deleteAccount = async (req, res) => {\r\n        const { id } = req.params;\r\n        const sql = `DELETE FROM thanhvien WHERE id_thanhvien = ${id}`;\r\n        await pool.execute(sql);\r\n        return res.redirect('/admin/account');\r\n    }\r\n\r\n    //GET categories page\r\n    categories = async (req, res) => {\r\n        const sql = `SELECT * FROM dmsanpham`;\r\n        const [rows] = await pool.execute(sql);\r\n        return res.render('admin/categories.ejs', { data: rows, url: req.url })\r\n    }\r\n\r\n    // delete categories page\r\n    deleteCategory = async (req, res) => {\r\n        const { id } = req.params;\r\n        const sql = `DELETE FROM dmsanpham WHERE id_dm = ${id}`;\r\n        await pool.execute(sql);\r\n        return res.redirect('/admin/categories');\r\n    }\r\n\r\n    // edit categories page\r\n    editCategory = async (req, res) => {\r\n        //get category by id\r\n        const { id } = req.params;\r\n        const sql = `SELECT * FROM dmsanpham WHERE id_dm = ${id}`;\r\n        const [rows] = await pool.execute(sql);\r\n        return res.render('admin/editCategory.ejs', { data: rows[0], url: req.url })\r\n    }\r\n\r\n    // update categories \r\n    updateCategory = async (req, res) => {\r\n        const { ten_dm } = req.body;\r\n        const { id } = req.params;\r\n        const sql = `UPDATE dmsanpham SET ten_dm = '${ten_dm}' WHERE id_dm = ${id}`;\r\n        await pool.execute(sql);\r\n        console.log(\"Checkk SQL>>>>>>>\", sql);\r\n        return res.redirect('/admin/categories');\r\n    }\r\n\r\n    //GET create categories page\r\n    getCreateCategory = async (req, res) => {\r\n        return res.render('admin/createCategories.ejs', { url: req.url })\r\n    }\r\n    //POST create categories page\r\n    createCategory = async (req, res) => {\r\n        const { ten_dm } = req.body;\r\n        const sql = `INSERT INTO dmsanpham (ten_dm) VALUES ('${ten_dm}')`;\r\n        await pool.execute(sql);\r\n        return res.redirect('/admin/categories');\r\n    }\r\n\r\n    // Get bills page\r\n    bills = async (req, res) => {\r\n        const sql = `SELECT * FROM hoa_don`;\r\n        const [rows] = await pool.execute(sql);\r\n        return res.render('admin/bills.ejs', { data: rows, url: req.url })\r\n    }\r\n\r\n    // delete bills \r\n    deleteBill = async (req, res) => {\r\n        const { id } = req.params;\r\n        const sql = `DELETE FROM hoa_don WHERE id  = ${id}`;\r\n        console.log(\"Checkk SQL:>>>>>\", sql);\r\n        await pool.execute(sql);\r\n        return res.redirect('/admin/bills');\r\n    }\r\n    // GET products page\r\n    products = async (req, res) => {\r\n        const sql = `SELECT * FROM sanpham`;\r\n        const [rows] = await pool.execute(sql);\r\n        return res.render('admin/products.ejs', { data: rows, url: req.url })\r\n    }\r\n    // delete products\r\n    deleteProduct = async (req, res) => {\r\n        const { id } = req.params;\r\n        const sql = `DELETE FROM sanpham WHERE id_sp = ${id}`;\r\n        await pool.execute(sql);\r\n        return res.redirect('/admin/products');\r\n    }\r\n    // GET edit product page\r\n    editProduct = async (req, res) => {\r\n        const { id } = req.params;\r\n        const sql = `SELECT * FROM sanpham WHERE id_sp = ${id}`;\r\n        const sql2 = `SELECT * FROM dmsanpham`;\r\n        const [rows, rows2] = await Promise.all([pool.execute(sql), pool.execute(sql2)]);\r\n        console.log(\"Checkk SQL:>>>>>\", sql);\r\n        return res.render('admin/editProduct.ejs', { data: rows[0][0], data2: rows2[0], url: req.url })\r\n    }\r\n    // update product\r\n    updateProduct = async (req, res) => {\r\n        //get img from sanpham\r\n        const { id } = req.params;\r\n        const sqlimg = `SELECT anh_sp FROM sanpham WHERE id_sp = ${id}`;\r\n        const [rowsimg] = await pool.execute(sqlimg);\r\n        const { anh_sp } = rowsimg[0];\r\n        let { ten_sp, gia_sp, trang_thai, id_dm, khuyen_mai, description } = req.body;\r\n        let newprice = new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(gia_sp);\r\n        const sql = `UPDATE sanpham SET ten_sp = '${ten_sp}', gia_sp = '${newprice}', trang_thai = '${trang_thai}', id_dm = '${id_dm}', khuyen_mai = '${khuyen_mai}', chi_tiet_sp = '${description}', anh_sp = '${anh_sp ? anh_sp : \"\"}' WHERE id_sp = ${id}`;\r\n        await pool.execute(sql);\r\n        return res.redirect('/admin/products');\r\n    }\r\n    // GET create product page\r\n    getCreateProduct = async (req, res) => {\r\n        const sql = `SELECT * FROM dmsanpham`;\r\n        const [rows] = await pool.execute(sql);\r\n        return res.render('admin/createProduct.ejs', { data: rows, url: req.url })\r\n    }\r\n    //POST create product page\r\n    createProduct = async (req, res) => {\r\n        if (req.file != null || req.file != undefined) {\r\n            req.body.avatar = req.file.path.split('\\\\').slice(2).join('/');\r\n        }\r\n        const { ten_sp, gia_sp, trang_thai, ma_dm, khuyen_mai, description, avatar, ban_chay } = req.body;\r\n        let newprice = new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(gia_sp);\r\n        const sql = `INSERT INTO sanpham (ban_chay,id_sp,id_dm, ten_sp, anh_sp,gia_sp, khuyen_mai, trang_thai,chi_tiet_sp) VALUES (${ban_chay ? ban_chay : 0},NULL, ${ma_dm}, '${ten_sp}', '${avatar ? avatar : \"NULL\"}', '${newprice}', '${khuyen_mai}', '${trang_thai}', '${description}')`;\r\n        await pool.execute(sql);\r\n        console.log(sql);\r\n        return res.redirect('/admin/products');\r\n    }\r\n\r\n    // GET comments page\r\n    comments = async (req, res) => {\r\n        const sql = `SELECT * FROM blsanpham`;\r\n        const [rows] = await pool.execute(sql);\r\n\r\n        console.log(rows);\r\n        return res.render('admin/comments.ejs', { data: rows, url: req.url })\r\n    }\r\n    // delete comments\r\n    deleteComment = async (req, res) => {\r\n        const { id } = req.params;\r\n        const sql = `DELETE FROM blsanpham WHERE blsanpham.id_bl = ${id}`;\r\n        await pool.execute(sql);\r\n        return res.redirect('/admin/comments');\r\n    }\r\n}\r\n\r\n\r\nmodule.exports = new AdminController;"
        }
    ]
}