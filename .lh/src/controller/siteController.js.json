{
    "sourceFile": "src/controller/siteController.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1658657930618,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1658657943297,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-const pool from '../config/connectDatabase'\r\n+const pool = require('../config/connectDatabase')\r\n //[GET]\r\n class SiteController {\r\n     getHomepage = async (req, res) => {\r\n         //pagination product\r\n"
                }
            ],
            "date": 1658657930618,
            "name": "Commit-0",
            "content": "const pool from '../config/connectDatabase'\r\n//[GET]\r\nclass SiteController {\r\n    getHomepage = async (req, res) => {\r\n        //pagination product\r\n        const page = parseInt(req.query.page) || 1;\r\n        const perPage = 8;\r\n        const start = (page - 1) * perPage;\r\n        const end = page * perPage;\r\n        const [Count] = await pool.execute('SELECT COUNT(*) FROM `sanpham`');\r\n        const totalPage = Math.ceil(Count[0]['COUNT(*)'] / perPage);\r\n        const [products] = await pool.execute('SELECT * FROM sanpham LIMIT ?, ?', [start, end]);\r\n        res.render('pages/index.ejs', {\r\n            products,\r\n            page,\r\n            totalPage,\r\n            page_layout: '/'\r\n        });\r\n    }\r\n\r\n    //GET DETIAL PRODUCT\r\n    getDetailProduct = async (req, res) => {\r\n        const sql = `SELECT * FROM sanpham WHERE id_sp = ${req.query.id}`;\r\n        //get comments fron blsanpham\r\n        const sql1 = `SELECT * FROM blsanpham WHERE id_sp = ${req.query.id}`\r\n        //select count comment by id_sp\r\n        const sql2 = `SELECT COUNT(*) FROM blsanpham WHERE id_sp = ${req.query.id}`\r\n        const [rows] = await pool.execute(sql);\r\n        const [comments] = await pool.execute(sql1);\r\n        const [count] = await pool.execute(sql2);\r\n        if (rows[0] !== undefined || rows[0] !== null || rows[0] !== '' || rows[0] !== 0 || rows[0] !== '0') {\r\n            res.render('pages/index.ejs', {\r\n                dataDetail: rows[0],\r\n                comments,\r\n                count: count[0]['COUNT(*)'],\r\n                page_layout: req.query.page_layout\r\n            });\r\n        }\r\n        else {\r\n            res.render('pages/404.ejs');\r\n        }\r\n    }\r\n\r\n    //GET PRODUCTS\r\n    getProducts = async (req, res) => {\r\n        //get danhmusp and sanpham\r\n        const id = req.query.id_dm;\r\n        const sql = `SELECT * FROM dmsanpham WHERE id_dm = ${id}`;\r\n        const sql2 = `SELECT * FROM sanpham WHERE id_dm = ${id} ORDER BY id_sp DESC`;\r\n        const [rows1, rows2] = await Promise.all([pool.query(sql), pool.query(sql2)]);\r\n        console.log(rows2[0]);\r\n        //get danhmusp and sanpham\r\n        res.render('pages/index.ejs', {\r\n            danhmucsp: rows1[0][0],\r\n            sanpham: rows2[0],\r\n            page_layout: req.query.page_layout\r\n        });\r\n    }\r\n\r\n    //GET SEARCH\r\n    getSearch = async (req, res) => {\r\n        let search = req.query.search;\r\n        search = search.replace(/\\s/g, '%');\r\n        //pagegination product\r\n        const page = parseInt(req.query.page) || 1;\r\n        const perPage = 8;\r\n        const start = (page - 1) * perPage;\r\n        const end = page * perPage;\r\n        const [Count] = await pool.execute('SELECT COUNT(*) FROM `sanpham` WHERE ten_sp LIKE \"%' + search + '%\"');\r\n        const totalPage = Math.ceil(Count[0]['COUNT(*)'] / perPage);\r\n        const [sanpham] = await pool.execute('SELECT * FROM sanpham WHERE ten_sp LIKE \"%' + search + '%\" LIMIT ?, ?', [start, end]);\r\n        res.render('pages/index.ejs', {\r\n            sanpham,\r\n            page,\r\n            totalPage,\r\n            search: req.query.search,\r\n            page_layout: 'search'\r\n        });\r\n    }\r\n\r\n    //POST COMMENT\r\n    postComment = async (req, res) => {\r\n        const id = req.params.id;\r\n        const { message, name, sdt, star } = req.body;\r\n        let date;\r\n        date = new Date();\r\n        date = date.getUTCFullYear() + '-' +\r\n            ('00' + (date.getUTCMonth() + 1)).slice(-2) + '-' +\r\n            ('00' + date.getUTCDate()).slice(-2) + ' ' +\r\n            ('00' + date.getUTCHours()).slice(-2) + ':' +\r\n            ('00' + date.getUTCMinutes()).slice(-2) + ':' +\r\n            ('00' + date.getUTCSeconds()).slice(-2);\r\n        console.log(date);\r\n        const sql = `INSERT INTO blsanpham (id_bl, id_sp, ten, dien_thoai, binh_luan, ngay_gio, star) VALUES (NULL, ${id}, '${name}', '${sdt}', '${message}', '${date}', ${star ? star : 0})`;\r\n        console.log(sql);\r\n        await pool.execute(sql);\r\n        res.redirect('back');\r\n\r\n    }\r\n\r\n    //GET Contact\r\n    getContact = (req, res) => {\r\n        res.render('pages/index.ejs', {\r\n            page_layout: 'contact'\r\n        });\r\n    }\r\n}\r\n\r\n\r\nmodule.exports = new SiteController;"
        }
    ]
}