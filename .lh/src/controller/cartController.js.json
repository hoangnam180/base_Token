{
    "sourceFile": "src/controller/cartController.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1658658434071,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1658658434071,
            "name": "Commit-0",
            "content": "\r\nconst pool = require('../config/connectDatabase');\r\nclass CartController {\r\n    async getCart(req, res) {\r\n        const Arr_giohang = req.signedCookies.giohang;\r\n        const list_id_sp = Arr_giohang.map(item => item.id).join(',');\r\n        if (list_id_sp.length > 0) {\r\n            const sql = `SELECT * FROM sanpham WHERE id_sp IN (${list_id_sp})`;\r\n            const [rows] = await pool.execute(sql);\r\n            const newGiohang = [...req.signedCookies.giohang];\r\n            console.log(rows, newGiohang);\r\n            res.render('pages/index.ejs', {\r\n                products: rows,\r\n                Arr_giohang: newGiohang,\r\n                page_layout: 'cart'\r\n            })\r\n            return\r\n        }\r\n        res.render('pages/index.ejs', {\r\n            products: [],\r\n            Arr_giohang: [],\r\n            page_layout: 'cart'\r\n        })\r\n    }\r\n\r\n    addCart(req, res) {\r\n        const id = req.params.id;\r\n        const Arr_giohang = req.signedCookies.giohang;\r\n        if (Arr_giohang.length > 0) {\r\n            const index = Arr_giohang.findIndex(item => item.id === id);\r\n            if (index != -1) {\r\n                Arr_giohang[index].quantity += 1;\r\n            }\r\n            else {\r\n                Arr_giohang.push({\r\n                    id: id,\r\n                    quantity: 1\r\n                })\r\n            }\r\n        }\r\n        else {\r\n            // add id to Arr_giohang\r\n            Arr_giohang.push({\r\n                id: id,\r\n                quantity: 1\r\n            });\r\n        }\r\n        res.cookie('giohang', Arr_giohang, {\r\n            signed: true,\r\n        });\r\n        res.redirect('/cart');\r\n    }\r\n    minusCart(req, res) {\r\n        const id = req.params.id;\r\n        const Arr_giohang = req.signedCookies.giohang;\r\n        const index = Arr_giohang.findIndex(item => item.id === id);\r\n        if (index != -1) {\r\n            if (Arr_giohang[index].quantity > 1) {\r\n                Arr_giohang[index].quantity -= 1;\r\n            }\r\n            else {\r\n                Arr_giohang.splice(index, 1);\r\n            }\r\n        }\r\n        res.cookie('giohang', Arr_giohang, {\r\n            signed: true,\r\n        });\r\n        res.redirect('/cart');\r\n    }\r\n    deleteCart(req, res) {\r\n        const id = req.params.id;\r\n        const Arr_giohang = req.signedCookies.giohang;\r\n        const index = Arr_giohang.findIndex(item => item.id === id);\r\n        if (index != -1) {\r\n            Arr_giohang.splice(index, 1);\r\n        }\r\n        res.cookie('giohang', Arr_giohang, {\r\n            signed: true,\r\n        });\r\n        res.redirect('/cart');\r\n    }\r\n    async checkout(req, res) {\r\n        const Arr_giohang = req.signedCookies.giohang;\r\n        const userId = req.signedCookies.id_user;\r\n        const list_id_sp = Arr_giohang.map(item => item.id).join(',');\r\n        // select userId\r\n        const sql = `SELECT * FROM thanhvien WHERE id_thanhvien = ${userId}`;\r\n        const [user] = await pool.execute(sql);\r\n        if (list_id_sp.length > 0) {\r\n            const sql = `SELECT * FROM sanpham WHERE id_sp IN (${list_id_sp})`;\r\n            const [rows] = await pool.execute(sql);\r\n            const newGiohang = [...req.signedCookies.giohang];\r\n            res.render('pages/index.ejs', {\r\n                products: rows,\r\n                user: user[0],\r\n                Arr_giohang: newGiohang,\r\n                page_layout: 'checkout'\r\n            })\r\n            return\r\n        }\r\n        res.render('pages/index.ejs', {\r\n            user: {},\r\n            products: [],\r\n            Arr_giohang: [],\r\n            page_layout: 'checkout'\r\n        })\r\n    }\r\n    async bills(req, res) {\r\n        const Arr_giohang = req.signedCookies.giohang;\r\n        let totalPrice = req.body.price;\r\n        const userId = req.signedCookies.id_user;\r\n        const list_id_sp = Arr_giohang.map(item => item.id).join(',');\r\n        const sql = `SELECT * FROM sanpham WHERE id_sp IN (${list_id_sp})`;\r\n        const [rows] = await pool.execute(sql);\r\n        const name_product = rows.map(item => item.ten_sp).join(',');\r\n        const sql1 = `INSERT INTO hoa_don (id, name_product, price, id_thanhvien) VALUES (NULL , '${name_product}', '${totalPrice}', ${userId})`;\r\n        console.log(sql1);\r\n        const [rows1] = await pool.execute(sql1);\r\n        // clear cookie\r\n        res.clearCookie('giohang');\r\n        if (rows1.affectedRows > 0) {\r\n            res.render('pages/index.ejs', {\r\n                page_layout: 'bills'\r\n            })\r\n            return;\r\n        }\r\n\r\n        res.redirect('/cart');\r\n    }\r\n\r\n    getBills(req, res) {\r\n        res.render('pages/index.ejs', {\r\n            page_layout: 'bills'\r\n        })\r\n    }\r\n}\r\n\r\n\r\nmodule.exports = new CartController;"
        }
    ]
}